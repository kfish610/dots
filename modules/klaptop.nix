# Generated by nixos-generate-config
{
  config,
  lib,
  pkgs,
  ...
}:

{
  networking = {
    hostName = "klaptop";

    # Use iwd for networking
    wireless.iwd.enable = true;
  };

  hardware = {
    bluetooth.enable = true;

    # Logitech/Solaar
    logitech.wireless = {
      enable = true;
      enableGraphical = true;
    };
  };

  # Autologin with greetd
  services.greetd = {
    enable = true;
    settings = {
      default_session = {
        command = "${pkgs.greetd.greetd}/bin/agreety --cmd Hyprland";
      };
      initial_session = {
        user = "kfish";
        command = "Hyprland";
      };
    };
  };

  programs = {
    # Enable sway and let home-manager manager it
    sway = {
      enable = true;
      package = null;
    };

    hyprland.enable = true;

    wireshark = {
      enable = true;
      package = pkgs.wireshark; # Default module has an incorrect package name
    };
  };

  # Setup SwayOSD
  environment.systemPackages = [ pkgs.swayosd ];
  services.udev.packages = [ pkgs.swayosd ];
  # Start the libinput backend for SwayOSD
  systemd.services.swayosd-libinput-backend = {
    description = "SwayOSD LibInput backend for listening to certain keys like CapsLock, ScrollLock, VolumeUp, etc.";
    documentation = [ "https://github.com/ErikReider/SwayOSD" ];
    wantedBy = [ "graphical.target" ];
    partOf = [ "graphical.target" ];
    after = [ "graphical.target" ];

    serviceConfig = {
      Type = "dbus";
      BusName = "org.erikreider.swayosd";
      ExecStart = "${pkgs.swayosd}/bin/swayosd-libinput-backend";
      Restart = "on-failure";
    };
  };

  # Docker setup
  virtualisation.docker.enable = true;
  users.groups.docker.members = [ "kfish" ];

  #### The following code was generated by NixOS: ####
  # To mirror installer/scan/not-detected.nix
  hardware.enableRedistributableFirmware = true;

  # Use systemd-boot under UEFI
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f43c5b92-f6fb-4f10-a6ce-c8cc6bac5792";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0C25-528B";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
